{"version":3,"file":"upload.js","sources":["../../../../out-tsc/@ng-tangram/components/upload/upload-interceptor.ts","../../../../out-tsc/@ng-tangram/components/upload/upload.ts","../../../../out-tsc/@ng-tangram/components/upload/upload.module.ts","../../../../out-tsc/@ng-tangram/components/upload/upload-control.ts","../../../../out-tsc/@ng-tangram/components/upload/upload-errors.ts"],"sourcesContent":["import { HttpResponse, HttpRequest, HttpHandler } from \"@angular/common/http\";\nimport { InjectionToken, Optional, Inject } from \"@angular/core\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { NtUploadStatus } from \"./upload-status\";\n\nexport interface NtUploadResult<T> {\n  status: NtUploadStatus;\n  error?: string;\n  data?: T;\n}\n\nexport class NtUploadInterceptor<T = any> {\n\n  response(res: HttpResponse<any>): NtUploadResult<T> {\n    return {\n      status: res.status >= 200 && res.status < 400 ? NtUploadStatus.SUCCESS : NtUploadStatus.ERROR,\n      data: res.body\n    };\n  }\n\n  catch(error: HttpErrorResponse): NtUploadResult<T> {\n    return {\n      status: NtUploadStatus.ERROR,\n      error: error.statusText\n    };\n  }\n}\n\nexport const NT_UPLOAD_INTERCEPTOR = new InjectionToken<NtUploadInterceptor>('nt-upload-interceptor');\n","/**\n * 文件上传请求服务\n */\n\nimport {\n  HttpClient, HttpEvent, HttpEventType, HttpHeaders, HttpRequest, HttpResponse\n} from '@angular/common/http';\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { NtUploadHandler } from './upload-handler';\nimport { NT_UPLOAD_INTERCEPTOR, NtUploadInterceptor, NtUploadResult } from './upload-interceptor';\nimport { Observable } from 'rxjs/Observable';\nimport { map, filter } from 'rxjs/operators';\n\n@Injectable()\nexport class NtUpload {\n\n  constructor(\n    private _http: HttpClient,\n    @Optional() @Inject(NT_UPLOAD_INTERCEPTOR) private _interceptor: NtUploadInterceptor) { }\n\n  upload<T>(url: string, file: File | FormData, handler: NtUploadHandler = {}): Observable<NtUploadResult<T>> {\n\n    return this._http.request(new HttpRequest('POST', url, file, { reportProgress: true } ))\n      .pipe(\n        map(event => this._progressHandler(event, handler)),\n        filter(event => event.type === HttpEventType.Response),\n        map((event : HttpResponse<any>) => this._interceptor.response(event))\n      );\n  }\n\n  private _progressHandler(event: HttpEvent<any>, handler: NtUploadHandler = {}) {\n\n    if (event.type === HttpEventType.Sent && handler.begin instanceof Function) {\n      handler.begin(event);\n    } else if (event.type === HttpEventType.UploadProgress && handler.progress instanceof Function) {\n      handler.progress(event);\n    } else if (event.type === HttpEventType.Response && handler.done instanceof Function) {\n      handler.done();\n    }\n    return event;\n  }\n}\n","\n\nimport { NgModule } from '@angular/core';\nimport { NtUpload } from './upload';\nimport { NT_UPLOAD_INTERCEPTOR, NtUploadInterceptor } from './upload-interceptor';\n\n@NgModule({\n  providers: [\n    { provide: NT_UPLOAD_INTERCEPTOR, useClass: NtUploadInterceptor },\n    NtUpload\n  ],\n})\nexport class NtUploadModule { }\n","import { EventEmitter } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { NtFormFieldControl } from '@ng-tangram/components/forms';\n\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { NtUpload } from './upload';\nimport { NtUploadControlError } from './upload-errors';\nimport { NtUploadStatus } from './upload-status';\nimport { HttpProgressEvent } from '@angular/common/http';\n\nexport class NtUploadFile<T = any> {\n  status: NtUploadStatus = NtUploadStatus.BEGIN;\n  error?: string;\n  data?: T;\n\n  constructor(\n    public name: string,\n    public size?: number,\n    public type?: string,\n    public link?: string) { }\n}\n\nexport abstract class NtUploadControl<T extends NtUploadFile> extends NtFormFieldControl<T[]> {\n\n  readonly value: T[];\n\n  readonly maxSize: number;\n\n  readonly accept: string | string[];\n\n  readonly url: string;\n\n  readonly files: T[];\n\n  readonly autoupload: boolean;\n\n  readonly error: EventEmitter<NtUploadControlError>;\n\n  readonly remove: EventEmitter<T>;\n\n  name: string;\n\n  protected _onChange: (value: any) => void = () => {};\n\n  protected _onTouched = () => {};\n\n  constructor(protected _uploader: NtUpload, public ngControl: NgControl) {\n    super();\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  writeValue(value: T[]) {\n    if (value) {\n      this.setValue(value);\n    }\n  }\n\n  registerOnChange(fn: (_: any) => {}) {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}) {\n    this._onTouched = fn;\n  }\n\n  protected _getFormData(file: File): File | FormData {\n\n    if (this.name) {\n      const formData = new FormData();\n      formData.append(this.name, file);\n      return formData;\n    }\n    return file;\n  }\n\n  abstract setValue(value: T[]): void;\n}\n","import { NumberValueAccessor } from \"@angular/forms/src/directives/number_value_accessor\";\n\nexport declare type NtUploadControlError = NtFileAcceptError | NtFileSizeError | NtFileUploadError;\n\nexport class NtFileAcceptError {\n  constructor(\n    public file: File,\n    public fileAccept: string,\n    public allowAccepts?: string[]) { }\n}\n\nexport class NtFileSizeError {\n  constructor(\n    public file: File,\n    public maxSize: number,\n    public maxSizeString?: string) { }\n}\n\nexport class NtFileUploadError {\n  constructor(\n    public status: number,\n    public statusText: string) { }\n}\n"],"names":[],"mappings":"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"}