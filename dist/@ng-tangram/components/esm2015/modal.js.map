{"version":3,"file":"modal.js","sources":["../../../../out-tsc/@ng-tangram/components/modal/modal-config.ts","../../../../out-tsc/@ng-tangram/components/modal/modal.component.ts","../../../../out-tsc/@ng-tangram/components/modal/modal-ref.ts","../../../../out-tsc/@ng-tangram/components/modal/modal.ts","../../../../out-tsc/@ng-tangram/components/modal/modal-header.component.ts","../../../../out-tsc/@ng-tangram/components/modal/modal-body.component.ts","../../../../out-tsc/@ng-tangram/components/modal/modal-footer.component.ts","../../../../out-tsc/@ng-tangram/components/modal/modal.module.ts"],"sourcesContent":["import { TemplateRef } from '@angular/core';\nimport { ComponentType } from '@angular/cdk/portal';\n\nexport class NtModalConfig<T = any> {\n  id?: string;\n  // width?: string = '400px';\n  // height?: string = '600px';\n  top?: string = '80px';\n  minWidth?: number | string;\n  minHeight?: number | string;\n  maxWidth?: number | string = '80vw';\n  maxHeight?: number | string;\n  title?: string;\n  closable?: boolean = true;\n  position?: '';\n  data?: any = {};\n  panelClass?: string = 'tm-file-preview-modal-panel';\n  hasBackdrop?: boolean = true;\n  backdropClass?: string = 'dark-backdrop';\n  centerVertically?: boolean = false;\n}\n","\nimport { Component, OnInit, Input, ViewEncapsulation, ComponentRef, EmbeddedViewRef, ViewChild, EventEmitter } from '@angular/core';\nimport { BasePortalOutlet, CdkPortalOutlet, TemplatePortal } from '@angular/cdk/portal';\nimport { ComponentPortal, ComponentType, PortalInjector, PortalHost, DomPortalHost } from '@angular/cdk/portal';\n\nimport { trigger, transition, useAnimation, AnimationEvent } from '@angular/animations';\nimport { fadeInY, fadeOutY } from '@ng-tangram/animate/fading';\n\nimport { NtModalConfig } from './modal-config';\nimport { NtModalRef } from './modal-ref';\n\nexport function throwNtModalContentAlreadyAttachedError() {\n  throw Error('Attempting to attach modal content after content is already attached');\n}\n\n@Component({\n  selector: 'nt-modal',\n  template: `\n    <ng-template cdkPortalOutlet></ng-template>\n    <button *ngIf=\"config.closable\" (click)=\"exit()\" class=\"close-button\" type=\"button\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('fade', [\n      transition('void => *',  fadeInY({ a: '-10%', b: 0 }, .2)),\n      transition('* => exit',  fadeOutY({ a: 0, b: '-10%' }, .2))\n    ])\n  ],\n  host: {\n    'class': 'reveal',\n    '[@fade]': 'state',\n    '(@fade.start)': 'onAnimationStart($event)',\n    '(@fade.done)': 'onAnimationDone($event)',\n  }\n})\nexport class NtModalComponent extends BasePortalOutlet {\n\n  @ViewChild(CdkPortalOutlet) private _portalOutlet: CdkPortalOutlet;\n\n  _config: NtModalConfig;\n\n  set config(value: NtModalConfig) { this._config = value; }\n  get config () { return this._config; }\n\n  state: 'void' | 'enter' | 'exit' = 'enter';\n\n  animationStateChanged = new EventEmitter<AnimationEvent>();\n\n  constructor() { super(); }\n\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    if (this._portalOutlet.hasAttached()) {\n      throwNtModalContentAlreadyAttachedError();\n    }\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    if (this._portalOutlet.hasAttached()) {\n      throwNtModalContentAlreadyAttachedError();\n    }\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n\n  onAnimationDone(event: AnimationEvent): void {\n    this.animationStateChanged.emit(event);\n  }\n\n  onAnimationStart(event: AnimationEvent): void {\n    this.animationStateChanged.emit(event);\n  }\n\n  exit() {\n    this.state = 'exit';\n  }\n}\n","import { ESCAPE } from '@angular/cdk/keycodes';\nimport { GlobalPositionStrategy, OverlayRef } from '@angular/cdk/overlay';\nimport { Location } from '@angular/common';\nimport { Optional } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { filter, take } from 'rxjs/operators';\nimport { Subject } from 'rxjs/Subject';\nimport { ISubscription, Subscription } from 'rxjs/Subscription';\n\nimport { NtModalComponent } from './modal.component';\n\n// Counter for unique modal ids.\nlet uniqueId = 0;\n\nexport class NtModalRef<T, R = any> {\n\n  componentInstance: T;\n\n  closable: boolean | undefined = this._containerInstance.config.closable;\n\n  private _afterOpen = new Subject<void>();\n  private _afterClosed = new Subject<R | undefined>();\n  private _beforeClose = new Subject<R | undefined>();\n  private _result: R | undefined;\n  private _locationChanges: ISubscription = Subscription.EMPTY;\n\n  constructor(\n    private _overlayRef: OverlayRef,\n    private _containerInstance: NtModalComponent,\n    location?: Location,\n    readonly id: string = `nt-modal-${uniqueId++}`) {\n\n    // Emit when opening animation completes\n    _containerInstance.animationStateChanged\n      .pipe(filter(event => event.phaseName === 'done' && event.toState === 'enter'), take(1))\n      .subscribe(() => {\n        this._afterOpen.next();\n        this._afterOpen.complete();\n      });\n\n    // Dispose overlay when closing animation is complete\n    _containerInstance.animationStateChanged\n      .pipe(filter(event => event.phaseName === 'done' && event.toState === 'exit'), take(1))\n      .subscribe(() => {\n        this._overlayRef.dispose();\n        this._locationChanges.unsubscribe();\n        this._afterClosed.next(this._result);\n        this._afterClosed.complete();\n        this.componentInstance = null!;\n      });\n\n    _overlayRef.keydownEvents()\n      .pipe(filter(event => event.keyCode === ESCAPE && !!this.closable))\n      .subscribe(() => this.close());\n\n    if (location) {\n      this._locationChanges = location.subscribe(() => this.close());\n    }\n  }\n\n  /**\n   * Close the modal.\n   * @param modalResult Optional result to return to the modal opener.\n   */\n  close(modalResult?: R): void {\n    this._result = modalResult;\n\n    // Transition the backdrop in parallel to the modal.\n    this._containerInstance.animationStateChanged\n      .pipe(filter(event => event.phaseName === 'start'), take(1))\n      .subscribe(() => {\n        this._beforeClose.next(modalResult);\n        this._beforeClose.complete();\n        this._overlayRef.detachBackdrop();\n      });\n\n    this._containerInstance.exit();\n  }\n\n  /**\n   * Gets an observable that is notified when the modal is finished opening.\n   */\n  afterOpen(): Observable<void> {\n    return this._afterOpen.asObservable();\n  }\n\n  /**\n   * Gets an observable that is notified when the modal is finished closing.\n   */\n  afterClosed(): Observable<R | undefined> {\n    return this._afterClosed.asObservable();\n  }\n\n  /**\n   * Gets an observable that is notified when the modal has started closing.\n   */\n  beforeClose(): Observable<R | undefined> {\n    return this._beforeClose.asObservable();\n  }\n\n  /**\n   * Gets an observable that emits when the overlay's backdrop has been clicked.\n   */\n  backdropClick(): Observable<MouseEvent> {\n    return this._overlayRef.backdropClick();\n  }\n\n  /**\n   * Gets an observable that emits when keydown events are targeted on the overlay.\n   */\n  keydownEvents(): Observable<KeyboardEvent> {\n    return this._overlayRef.keydownEvents();\n  }\n\n  /**\n   * Updates the modal's width and height.\n   * @param width New width of the modal.\n   * @param height New height of the modal.\n   */\n  updateSize(width: string = 'auto', height: string = 'auto'): this {\n    this._getPositionStrategy().width(width).height(height);\n    this._overlayRef.updatePosition();\n    return this;\n  }\n\n  /** Fetches the position strategy object from the overlay ref. */\n  private _getPositionStrategy(): GlobalPositionStrategy {\n    return this._overlayRef.getConfig().positionStrategy as GlobalPositionStrategy;\n  }\n}\n","import { Overlay, OverlayConfig, OverlayContainer, OverlayRef } from '@angular/cdk/overlay';\nimport {\n  ComponentPortal, ComponentType, DomPortalHost, PortalHost, PortalInjector, TemplatePortal\n} from '@angular/cdk/portal';\nimport { Location } from '@angular/common';\nimport {\n  ApplicationRef, ComponentFactoryResolver, ComponentRef, Inject, Injectable, InjectionToken,\n  Injector, Optional, TemplateRef\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n\nimport { NtModalConfig } from './modal-config';\nimport { NtModalComponent } from './modal.component';\nimport { NtModalRef } from './modal-ref';\n\nexport const NT_MODAL_DATA = new InjectionToken<any>('nt-modal-data');\nexport const NT_MODAL_DEFAULT_CONFIG = new InjectionToken<NtModalConfig>('nt-model-default-config');\nexport type NtModalContent<T> = TemplateRef<T> | ComponentType<T>;\n\n@Injectable()\nexport class NtModal {\n\n  private _openModalsAtThisLevel: NtModalRef<any>[] = [];\n  private _afterAllClosedAtThisLevel = new Subject<void>();\n  private _afterOpenAtThisLevel = new Subject<NtModalRef<any>>();\n\n  constructor(\n    @Optional() private _location: Location,\n    @Optional() @Inject(NT_MODAL_DEFAULT_CONFIG) private _defaultConfig: NtModalConfig,\n    private _overlay: Overlay,\n    private _injector: Injector,\n    private _overlayContainer: OverlayContainer,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _applicationRef: ApplicationRef) { }\n\n  open<T = any>(content: NtModalContent<T>, config: NtModalConfig = {}): NtModalRef<T, any> {\n\n    config = { ...this._defaultConfig || new NtModalConfig(), ...config };\n\n    const overlayRef = this._createOverlay(config);\n    const modalContainerRef = this._attachModalContainer(overlayRef, config);\n    const modalRef = this._attachModalContent(content, modalContainerRef, overlayRef, config);\n\n    this._openModalsAtThisLevel.push(modalRef);\n    modalRef.afterClosed().subscribe(() => this._removeOpenModal(modalRef));\n    this._afterOpenAtThisLevel.next(modalRef);\n\n    return modalRef;\n  }\n\n  private _createOverlay(config: NtModalConfig) {\n    const overlayConfig = this._getOverlayConfig(config);\n    return this._overlay.create(overlayConfig);\n  }\n\n  private _attachModalContainer(overlayRef: OverlayRef, config: NtModalConfig) {\n    const containerPortal = new ComponentPortal(NtModalComponent, null);\n    const containerRef: ComponentRef<NtModalComponent> = overlayRef.attach(containerPortal);\n    containerRef.instance.config = config;\n    return containerRef.instance;\n  }\n\n  private _attachModalContent<T>(\n    content: NtModalContent<T>,\n    modalContainer: NtModalComponent,\n    overlayRef: OverlayRef,\n    config: NtModalConfig): NtModalRef<T> {\n\n    const modalRef = new NtModalRef<T>(overlayRef, modalContainer, this._location, config.id);\n\n    if (config.hasBackdrop) {\n      overlayRef.backdropClick().subscribe(() => {\n        // if (modalRef.closable) {\n        modalRef.close();\n        // }\n      });\n    }\n\n    if (content instanceof TemplateRef) {\n      modalContainer.attachTemplatePortal(new TemplatePortal<T>(content, null!, <any>{ $implicit: config.data, modalRef }));\n    } else {\n      const injector = this._createInjector<T>(config, modalRef, modalContainer);\n      const contentRef = modalContainer.attachComponentPortal<T>(new ComponentPortal(content, undefined, injector));\n      modalRef.componentInstance = contentRef.instance;\n    }\n\n    return modalRef;\n  }\n\n  /**\n * Removes a modal from the array of open modals.\n * @param modalRef modal to be removed.\n */\n  private _removeOpenModal(modalRef: NtModalRef<any>) {\n    const index = this._openModalsAtThisLevel.indexOf(modalRef);\n\n    if (index > -1) {\n      this._openModalsAtThisLevel.splice(index, 1);\n\n      if (!this._openModalsAtThisLevel.length) {\n        this._afterAllClosedAtThisLevel.next();\n      }\n    }\n  }\n\n  private _createInjector<T>(config: NtModalConfig, modalRef: NtModalRef<T>, modalContainer: NtModalComponent): PortalInjector {\n    const injectionTokens = new WeakMap();\n    injectionTokens.set(NtModalRef, modalRef);\n    injectionTokens.set(NtModalComponent, modalContainer);\n    injectionTokens.set(NT_MODAL_DATA, config.data);\n    return new PortalInjector(this._injector, injectionTokens);\n  }\n\n  private _getOverlayConfig(config: NtModalConfig): OverlayConfig {\n    const positionStrategy = this._overlay.position()\n      .global()\n      .centerHorizontally();\n\n    const overlayConfig = new OverlayConfig({\n      hasBackdrop: config.hasBackdrop,\n      backdropClass: config.backdropClass,\n      panelClass: config.panelClass,\n      scrollStrategy: this._overlay.scrollStrategies.block(),\n      minWidth: config.minWidth,\n      minHeight: config.minHeight,\n      maxWidth: config.maxWidth,\n      maxHeight: config.maxHeight,\n      positionStrategy: config.centerVertically\n        ? positionStrategy.centerVertically()\n        : positionStrategy.top(config.top)\n    });\n\n    return overlayConfig;\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'nt-modal-header',\n  template: `<ng-content></ng-content>`,\n  host: {\n    class: 'nt-modal-header'\n  }\n})\nexport class NtModalHeaderComponent  { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'nt-modal-body',\n  template: `<ng-content></ng-content>`,\n  host: {\n    class: 'nt-modal-body'\n  }\n})\nexport class NtModalBodyComponent  { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'nt-modal-footer',\n  template: `<ng-content></ng-content>`,\n  host: {\n    class: 'nt-modal-footer'\n  }\n})\nexport class NtModalFooterComponent  { }\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NtModal } from './modal';\nimport { NtModalComponent } from './modal.component';\nimport { NtModalHeaderComponent } from './modal-header.component';\nimport { NtModalBodyComponent } from './modal-body.component';\nimport { NtModalFooterComponent } from './modal-footer.component';\n\n@NgModule({\n  imports: [CommonModule, PortalModule, OverlayModule],\n  entryComponents: [NtModalComponent],\n  declarations: [NtModalComponent, NtModalHeaderComponent, NtModalBodyComponent, NtModalFooterComponent],\n  providers: [NtModal],\n  exports: [NtModalHeaderComponent, NtModalBodyComponent, NtModalFooterComponent]\n})\nexport class NtModalModule { }\n"],"names":[],"mappings":"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"}