{"version":3,"file":"select.js","sources":["../../../../out-tsc/@ng-tangram/components/select/select.component.ts","../../../../out-tsc/@ng-tangram/components/select/select.module.ts"],"sourcesContent":["import { animate, group, state, style, transition, trigger } from '@angular/animations';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { OverlayOrigin } from '@angular/cdk/overlay';\nimport {\n  AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren,\n  ElementRef, EventEmitter, forwardRef, Inject, InjectionToken, Input, isDevMode, NgZone, OnDestroy,\n  Optional, Output, QueryList, Renderer2, Self, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NgControl, Validators } from '@angular/forms';\nimport {\n  NT_OPTION_PARENT_COMPONENT, NtOptionComponent, NtOptionParentComponent, NtOptionSelectionChange,\n  NtOverlayComponent, NtOverlayPosition\n} from '@ng-tangram/components/core';\n\nimport { NtFormFieldControl } from '@ng-tangram/components/forms';\n\nimport { Observable } from 'rxjs/Observable';\nimport { defer } from 'rxjs/observable/defer';\nimport { merge } from 'rxjs/observable/merge';\nimport { filter, map, startWith, switchMap, take, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs/Subject';\n\nexport function getNtSelectDynamicMultipleError() {\n  return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\nexport function getNtSelectNonArrayValueError() {\n  return Error('Value must be an array in multiple-selection mode.');\n}\n\nexport function getNtSelectNonFunctionValueError() {\n  return Error('`ntCompareWith` must be a function.');\n}\n\nexport class NtSelectChange {\n  constructor(public source: NtSelectComponent, public value: any) { }\n}\n\n@Component({\n  selector: 'nt-select',\n  template: \"<input #inputElement type=\\\"text\\\" (focus)=\\\"onFocus()\\\" (blur)=\\\"onBlur()\\\" (window:resize)=\\\"onResize()\\\" [readonly]=\\\"!filter\\\" [placeholder]=\\\"placeholder\\\" [disabled]=\\\"disabled\\\" [value]=\\\"filter && focused ? '' : triggerValue\\\"> <span class=\\\"nt-select-caret\\\"></span> <nt-overlay [origin]=\\\"origin\\\" trigger=\\\"click\\\" position=\\\"bottomLeft\\\" fixed (opened)=\\\"onOpen()\\\" (closed)=\\\"onClose()\\\"> <div #paneElement class=\\\"nt-select-pane\\\" [class.folded]=\\\"state === 'folded'\\\" [style.width.px]=\\\"width\\\"> <ng-content></ng-content> </div> </nt-overlay> \",\n  providers: [\n    { provide: NT_OPTION_PARENT_COMPONENT, useExisting: NtSelectComponent },\n    { provide: NtFormFieldControl, useExisting: NtSelectComponent }\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'nt-select nt-form-control',\n    '(resize)': 'onResize()',\n    '[class.focus]': 'overlay.isOpen'\n  }\n})\nexport class NtSelectComponent extends NtFormFieldControl<any>\n  implements AfterContentInit, ControlValueAccessor, NtOptionParentComponent, OnDestroy {\n\n  readonly origin: OverlayOrigin;\n\n  private _disabled = false;\n  private _focused = false;\n  private _filter = false;\n  private _selectionModel: SelectionModel<NtOptionComponent>;\n  private _state = '';\n  private _placeholder = '';\n  private _width: number;\n  private _multiple = false;\n  private _value: any;\n  private _viewValue: any;\n  private _required = false;\n\n  get value() { return this._value; }\n  get triggerValue(): string {\n    if (this.empty) {\n      return '';\n    }\n\n    if (this._multiple) {\n      const selectedOptions = this._selectionModel.selected.map(option => option.label);\n      return selectedOptions.join(', ');\n    }\n\n    return this._selectionModel.selected[0].label;\n  }\n\n  get empty(): boolean { return !this._selectionModel || this._selectionModel.isEmpty(); }\n\n  get focused(): boolean { return this._focused; }\n\n  @Input()\n  set disabled(value: boolean) { this._disabled = coerceBooleanProperty(value); }\n  get disabled() { return this._disabled; }\n\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n  get state() { return this._state; }\n\n  get width() { return this._width; }\n\n  @Input()\n  set multiple(value: boolean) { this._multiple = coerceBooleanProperty(value); }\n  get multiple() { return this._multiple; }\n\n  /**\n   * 选项是否可以过滤\n   * TODO: 计划在 0.2.0 >= 版本中支持\n   */\n  @Input()\n  set filter(value: boolean) { this._filter = coerceBooleanProperty(value); }\n  get filter() { return this._filter; }\n\n  get selected(): NtOptionComponent | NtOptionComponent[] {\n    return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n  }\n\n  @Input()\n  set placeholder(value: string) { this._placeholder = value; }\n  get placeholder() {\n    if (this.empty) {\n      return this._placeholder;\n    }\n\n    return this.filter ? this.triggerValue : this._placeholder;\n  }\n\n  @ViewChild('inputElement') inputElement: ElementRef;\n  @ViewChild('paneElement') paneElement: ElementRef;\n\n  @ViewChild(NtOverlayComponent) overlay: NtOverlayComponent;\n  @ContentChildren(NtOptionComponent) options: QueryList<NtOptionComponent>;\n\n  private _compareWith = (o1: any, o2: any) => o1 === o2;\n  private _onChange: (value: any) => void = () => { };\n  private _onTouched = () => { };\n\n  private readonly _destroy = new Subject<void>();\n\n  @Output() readonly selectionChange: EventEmitter<NtSelectChange> = new EventEmitter<NtSelectChange>();\n\n  @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  @Input()\n  set compareWith(fn: (o1: any, o2: any) => boolean) {\n    if (typeof fn !== 'function') {\n      throw getNtSelectNonFunctionValueError();\n    } else {\n      this._compareWith = fn;\n      if (this._selectionModel) {\n        this._initializeSelection();\n      }\n    }\n  }\n\n  readonly optionSelectionChanges: Observable<NtOptionSelectionChange> = defer(() => {\n    if (this.options) {\n      return merge(...this.options.map(option => option.selectionChange));\n    }\n\n    return this._ngZone.onStable\n      .asObservable()\n      .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n  });\n\n  constructor(\n    private _ngZone: NgZone,\n    private _renderer: Renderer2,\n    private _elementRef: ElementRef,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Self() @Optional() public ngControl: NgControl) {\n    super();\n\n    this.origin = new OverlayOrigin(_elementRef);\n\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n  }\n\n  ngAfterContentInit() {\n    this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n      this._resetOptions();\n      this._initializeSelection();\n    });\n  }\n\n  onResize() {\n    this._width = this.inputElement.nativeElement.clientWidth;\n  }\n\n  onOpen() {\n    this._state = 'folded';\n    this.onResize();\n    setTimeout(() => this._scrollActiveOptionIntoView());\n  }\n\n  onClose() {\n    this._state = 'closed';\n    this._onTouched();\n  }\n\n  onFocus() {\n    if (!this.overlay.isOpen && !this._disabled) {\n      this.overlay.show();\n      this._focused = true;\n    }\n  }\n\n  onBlur() {\n    this._focused = false;\n  }\n\n  focus() {\n    this.inputElement.nativeElement.focus();\n  }\n\n  writeValue(value: any) {\n    if (this.options) {\n      this._setSelectionByValue(value);\n    }\n  }\n\n  registerOnChange(fn: (_: any) => {}) {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}) {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this._disabled = isDisabled;\n  }\n\n  private _resetOptions() {\n\n    const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n    this.optionSelectionChanges\n      .pipe(takeUntil(changedOrDestroyed), filter(event => event.isUserInput))\n      .subscribe(event => {\n        this._onSelect(event.source);\n\n        if (!this.multiple && this.overlay.isOpen) {\n          this.overlay.hide();\n        }\n      });\n\n    // Listen to changes in the internal state of the options and react accordingly.\n    // Handles cases like the labels of the selected options changing.\n    merge(...this.options.map(option => option.stateChanges))\n      .pipe(takeUntil(changedOrDestroyed))\n      .subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n  }\n\n  private _initializeSelection(): void {\n    Promise.resolve().then(() => {\n      this._setSelectionByValue(this.ngControl ? this.ngControl.value : this.value);\n      this._scrollActiveOptionIntoView();\n    });\n  }\n\n  private _setSelectionByValue(value: any | any[], isUserInput = false): void {\n\n    if (this.multiple && value) {\n      if (!Array.isArray(value)) {\n        throw getNtSelectNonArrayValueError();\n      }\n\n      this._clearSelection();\n      value.forEach((currentValue: any) => this._selectValue(currentValue, isUserInput));\n      this._sortValues();\n    } else {\n      this._clearSelection();\n      const correspondingOption = this._selectValue(value, isUserInput);\n    }\n\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _selectValue(value: any, isUserInput = false): NtOptionComponent | undefined {\n    const correspondingOption = this.options.find((option: NtOptionComponent) => {\n      try {\n        return option.value != null && this._compareWith(option.value, value);\n      } catch (error) {\n        if (isDevMode()) {\n          console.warn(error);\n        }\n        return false;\n      }\n    });\n\n    if (correspondingOption) {\n      isUserInput ? correspondingOption.selectViaInteraction() : correspondingOption.select();\n      this._selectionModel.select(correspondingOption);\n    }\n\n    return correspondingOption;\n  }\n\n  private _propagateChanges(fallbackValue?: any): void {\n    let valueToEmit: any = null;\n\n    if (this.multiple) {\n      valueToEmit = (this.selected as NtOptionComponent[]).map(option => option.value);\n    } else {\n      valueToEmit = this.selected ? (this.selected as NtOptionComponent).value : fallbackValue;\n    }\n\n    this._value = valueToEmit;\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this.selectionChange.emit(new NtSelectChange(this, valueToEmit));\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _clearSelection(skip?: NtOptionComponent) {\n    this._selectionModel.clear();\n    this.options.forEach(option => {\n      if (option !== skip) {\n        option.deselect();\n      }\n    });\n  }\n\n  private _sortValues(): void {\n    if (this.multiple) {\n      this._selectionModel.clear();\n\n      this.options.forEach(option => {\n        if (option.selected) {\n          this._selectionModel.select(option);\n        }\n      });\n    }\n  }\n\n  private _onSelect(option: NtOptionComponent) {\n    const wasSelected = this._selectionModel.isSelected(option);\n\n    if (this.multiple) {\n      this._selectionModel.toggle(option);\n      wasSelected ? option.deselect() : option.select();\n      this._sortValues();\n    } else {\n      this._clearSelection(option.value == null ? undefined : option);\n\n      if (option.value == null) {\n        this._propagateChanges(option.value);\n      } else {\n        this._selectionModel.select(option);\n      }\n    }\n\n    if (wasSelected !== this._selectionModel.isSelected(option)) {\n      this._propagateChanges();\n    }\n  }\n\n  private _scrollActiveOptionIntoView() {\n    let selected: NtOptionComponent | null = null;\n\n    if (this.selected instanceof NtOptionComponent) {\n      selected = this.selected;\n    } else if (this.selected instanceof Array && this.selected.length > 0) {\n      selected = this.selected[0];\n    }\n    if (selected) {\n      this.paneElement.nativeElement.scrollTop = selected.getOffsetY();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NtOptionComponent, NtOptionModule, NtOverlayModule } from '@ng-tangram/components/core';\n\nimport { NtSelectComponent } from './select.component';\n\n@NgModule({\n  imports: [CommonModule, NtOverlayModule, NtOptionModule],\n  exports: [NtSelectComponent, NtOptionModule],\n  declarations: [NtSelectComponent]\n})\nexport class NtSelectModule { }\n"],"names":[],"mappings":"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"}