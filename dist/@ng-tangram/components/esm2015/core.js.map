{"version":3,"file":"core.js","sources":["../../../../out-tsc/@ng-tangram/components/core/datetime/date-adapter.ts","../../../../out-tsc/@ng-tangram/components/core/datetime/date-formats.ts","../../../../out-tsc/@ng-tangram/components/core/datetime/native-date-adapter.ts","../../../../out-tsc/@ng-tangram/components/core/datetime/native-date-formats.ts","../../../../out-tsc/@ng-tangram/components/core/datetime/native-date.module.ts","../../../../out-tsc/@ng-tangram/components/core/option/option.component.ts","../../../../out-tsc/@ng-tangram/components/core/option/option.module.ts","../../../../out-tsc/@ng-tangram/components/core/overlay/overlay-positions.ts","../../../../out-tsc/@ng-tangram/components/core/overlay/overlay.component.ts","../../../../out-tsc/@ng-tangram/components/core/overlay/overlay.module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, LOCALE_ID } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nexport const NT_DATE_LOCALE = new InjectionToken<string>('nt-date-locale');\n\n/** Provider for NT_DATE_LOCALE injection token. */\nexport const NT_DATE_LOCALE_PROVIDER = { provide: NT_DATE_LOCALE, useExisting: LOCALE_ID };\n\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nexport abstract class DateAdapter<D> {\n  /** The locale to use for all dates. */\n  protected locale: any;\n\n  /** A stream that emits when the locale changes. */\n  get localeChanges(): Observable<void> { return this._localeChanges; }\n  protected _localeChanges = new Subject<void>();\n\n  /**\n   * Gets the year component of the given date.\n   * @param date The date to extract the year from.\n   * @returns The year component.\n   */\n  abstract getYear(date: D): number;\n\n  /**\n   * Gets the month component of the given date.\n   * @param date The date to extract the month from.\n   * @returns The month component (0-indexed, 0 = January).\n   */\n  abstract getMonth(date: D): number;\n\n  /**\n   * Gets the date of the month component of the given date.\n   * @param date The date to extract the date of the month from.\n   * @returns The month component (1-indexed, 1 = first of month).\n   */\n  abstract getDate(date: D): number;\n\n  /**\n   * Gets the day of the week component of the given date.\n   * @param date The date to extract the day of the week from.\n   * @returns The month component (0-indexed, 0 = Sunday).\n   */\n  abstract getDayOfWeek(date: D): number;\n\n  /**\n   * Gets a list of names for the months.\n   * @param style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n   * @returns An ordered list of all month names, starting with January.\n   */\n  abstract getMonthNames(style: 'long' | 'short' | 'narrow', locale?: string): string[];\n\n  /**\n   * Gets a list of names for the dates of the month.\n   * @returns An ordered list of all date of the month names, starting with '1'.\n   */\n  abstract getDateNames(locale?: string): string[];\n\n  /**\n   * Gets a list of names for the days of the week.\n   * @param style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n   * @returns An ordered list of all weekday names, starting with Sunday.\n   */\n  abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow', locale?: string): string[];\n\n  /**\n   * Gets the name for the year of the given date.\n   * @param date The date to get the year name for.\n   * @returns The name of the given year (e.g. '2017').\n   */\n  abstract getYearName(date: D, locale?: string): string;\n\n  /**\n   * Gets the first day of the week.\n   * @returns The first day of the week (0-indexed, 0 = Sunday).\n   */\n  abstract getFirstDayOfWeek(): number;\n\n  /**\n   * Gets the number of days in the month of the given date.\n   * @param date The date whose month should be checked.\n   * @returns The number of days in the month of the given date.\n   */\n  abstract getNumDaysInMonth(date: D): number;\n\n  /**\n   * Clones the given date.\n   * @param date The date to clone\n   * @returns A new date equal to the given date.\n   */\n  abstract clone(date: D): D;\n\n  /**\n   * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n   * month and date.\n   * @param year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n   * @param month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n   * @param date The date of month of the date. Must be an integer 1 - length of the given month.\n   * @returns The new date, or null if invalid.\n   */\n  abstract createDate(year: number, month: number, date: number): D;\n\n  /**\n   * Gets today's date.\n   * @returns Today's date.\n   */\n  abstract today(): D;\n\n  /**\n   * Parses a date from a user-provided value.\n   * @param value The value to parse.\n   * @param parseFormat The expected format of the value being parsed\n   *     (type is implementation-dependent).\n   * @returns The parsed date.\n   */\n  abstract parse(value: any, parseFormat: any): D | null;\n\n  /**\n   * Formats a date as a string according to the given format.\n   * @param date The value to format.\n   * @param displayFormat The format to use to display the date as a string.\n   * @returns The formatted date string.\n   */\n  abstract format(date: D, displayFormat: any, locale?: string): string;\n\n  /**\n   * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n   * calendar for each year and then finding the closest date in the new month. For example when\n   * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n   * @param date The date to add years to.\n   * @param years The number of years to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of years added.\n   */\n  abstract addCalendarYears(date: D, years: number): D;\n\n  /**\n   * Adds the given number of months to the date. Months are counted as if flipping a page on the\n   * calendar for each month and then finding the closest date in the new month. For example when\n   * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n   * @param date The date to add months to.\n   * @param months The number of months to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of months added.\n   */\n  abstract addCalendarMonths(date: D, months: number): D;\n\n  /**\n   * Adds the given number of days to the date. Days are counted as if moving one cell on the\n   * calendar for each day.\n   * @param date The date to add days to.\n   * @param days The number of days to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of days added.\n   */\n  abstract addCalendarDays(date: D, days: number): D;\n\n  /**\n   * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\n   * This method is used to generate date strings that are compatible with native HTML attributes\n   * such as the `min` or `max` attribute of an `<input>`.\n   * @param date The date to get the ISO date string for.\n   * @returns The ISO date string date string.\n   */\n  abstract toIso8601(date: D): string;\n\n  /**\n   * Checks whether the given object is considered a date instance by this DateAdapter.\n   * @param obj The object to check\n   * @returns Whether the object is a date instance.\n   */\n  abstract isDateInstance(obj: any): boolean;\n\n  /**\n   * Checks whether the given date is valid.\n   * @param date The date to check.\n   * @returns Whether the date is valid.\n   */\n  abstract isValid(date: D): boolean;\n\n  /**\n   * Gets date instance that is not valid.\n   * @returns An invalid date.\n   */\n  abstract invalid(): D;\n\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<nt-datepicker>` will call this\n   * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value: any): D | null {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale: any) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first: D, second: D): number {\n    return this.getYear(first) - this.getYear(second) ||\n      this.getMonth(first) - this.getMonth(second) ||\n      this.getDate(first) - this.getDate(second);\n  }\n\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first: D | null, second: D | null): boolean {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid === secondValid;\n    }\n    return first === second;\n  }\n\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date: D, min?: D | null, max?: D | null): D {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { InjectionToken } from '@angular/core';\n\nexport type NtDateFormats = {\n  parse: { dateInput: any },\n  display: { dateInput: any, monthYearLabel: any }\n};\n\nexport const NT_DATE_FORMATS = new InjectionToken<NtDateFormats>('nt-date-formats');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { DateAdapter, NT_DATE_LOCALE } from './date-adapter';\n\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/** Whether the browser supports the Intl API. */\nconst SUPPORTS_INTL_API = typeof Intl !== 'undefined';\n\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n  'long': [\n    '一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月',\n    '十月', '十一月', '十二月'\n  ],\n  'short': ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n  'narrow': ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12']\n};\n\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\n\n\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\n  'short': ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],\n  'narrow': ['日', '一', '二', '三', '四', '五', '六']\n};\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX =\n  /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\n@Injectable()\nexport class NativeDateAdapter extends DateAdapter<Date> {\n  /** Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors. */\n  private readonly _clampDate: boolean;\n\n  private readonly _strings: { 'MONTH_NAMES': any, 'DAY_OF_WEEK_NAMES': any };\n\n  /**\n   * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n   * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n   * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n   * will produce `'8/13/1800'`.\n   *\n   * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n   * getting the string representation of a Date object from it's utc representation. We're keeping\n   * it here for sometime, just for precaution, in case we decide to revert some of these changes\n   * though.\n   */\n  useUtcForDisplay: boolean = true;\n\n  constructor(@Optional() @Inject(NT_DATE_LOCALE) ntDateLocale: string, platform: Platform) {\n    super();\n    super.setLocale(ntDateLocale);\n\n    // IE does its own time zone correction, so we disable this on IE.\n    this.useUtcForDisplay = !platform.TRIDENT;\n    this._clampDate = platform.TRIDENT || platform.EDGE;\n\n  }\n\n  getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow', locale: string = this.locale): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(locale, { month: style, timeZone: 'utc' });\n      return range(12, i =>\n        this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n    }\n    return DEFAULT_MONTH_NAMES[style];\n  }\n\n  /** 因为暂时不清楚在中文语言环境下设定纯数字日期名称，故先强制使用 英文日期  */\n  getDateNames(locale: string = 'en-US'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(locale, { day: 'numeric', timeZone: 'utc' });\n      return range(31, i => this._stripDirectionalityCharacters(\n        this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DATE_NAMES;\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow', locale: string = this.locale): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(locale, { weekday: style, timeZone: 'utc' });\n      return range(7, i => this._stripDirectionalityCharacters(\n        this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n\n  getYearName(date: Date, locale: string = this.locale): string {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(locale, { year: 'numeric', timeZone: 'utc' });\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return String(this.getYear(date));\n  }\n\n  getFirstDayOfWeek(): number {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n\n  getNumDaysInMonth(date: Date): number {\n    return this.getDate(this._createDateWithOverflow(\n      this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n\n  clone(date: Date): Date {\n    return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\n  }\n\n  createDate(year: number, month: number, date: number): Date {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    let result = this._createDateWithOverflow(year, month, date);\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() !== month) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  today(): Date {\n    return new Date();\n  }\n\n  parse(value: any): Date | null {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value === 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n\n  format(date: Date, displayFormat: Object, locale: string = this.locale): string {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n\n    if (SUPPORTS_INTL_API) {\n      // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n      // if we attempt to format a date whose year is less than 1 or greater than 9999.\n      if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n        date = this.clone(date);\n        date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n      }\n\n      displayFormat = { ...displayFormat, timeZone: 'utc' };\n\n      const dtf = new Intl.DateTimeFormat(locale, displayFormat);\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n\n  addCalendarYears(date: Date, years: number): Date {\n    return this.addCalendarMonths(date, years * 12);\n  }\n\n  addCalendarMonths(date: Date, months: number): Date {\n    let newDate = this._createDateWithOverflow(\n      this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) !== ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n\n    return newDate;\n  }\n\n  addCalendarDays(date: Date, days: number): Date {\n    return this._createDateWithOverflow(\n      this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n\n  toIso8601(date: Date): string {\n    return [\n      date.getUTCFullYear(),\n      this._2digit(date.getUTCMonth() + 1),\n      this._2digit(date.getUTCDate())\n    ].join('-');\n  }\n\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   */\n  deserialize(value: any): Date | null {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n      if (ISO_8601_REGEX.test(value)) {\n        let date = new Date(value);\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n    return super.deserialize(value);\n  }\n\n  isDateInstance(obj: any) {\n    return obj instanceof Date;\n  }\n\n  isValid(date: Date) {\n    return !isNaN(date.getTime());\n  }\n\n  invalid(): Date {\n    return new Date(NaN);\n  }\n\n  /** Creates a date but allows the month and date to overflow. */\n  private _createDateWithOverflow(year: number, month: number, date: number) {\n    const result = new Date(year, month, date);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(this.getYear(result) - 1900);\n    }\n    return result;\n  }\n\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  private _2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n\n  /**\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n   * other browsers do not. We remove them to make output consistent and because they interfere with\n   * date parsing.\n   * @param str The string to strip direction characters from.\n   * @returns The stripped string.\n   */\n  private _stripDirectionalityCharacters(str: string) {\n    return str.replace(/[\\u200e\\u200f]/g, '');\n  }\n\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param date Date from which we want to get the string representation according to dtf\n   * @returns A Date object with its UTC representation based on the passed in date info\n   */\n  private _format(dtf: Intl.DateTimeFormat, date: Date) {\n    const d = new Date(Date.UTC(\n      date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(),\n      date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n    return dtf.format(d);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { NtDateFormats } from './date-formats';\n\nexport const NT_NATIVE_DATE_FORMATS: NtDateFormats = {\n  parse: {\n    dateInput: null,\n  },\n  display: {\n    dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n    monthYearLabel: { month: 'short' }\n  }\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { NgModule } from '@angular/core';\nimport { DateAdapter, NT_DATE_LOCALE_PROVIDER } from './date-adapter';\nimport { NT_DATE_FORMATS } from './date-formats';\nimport { NativeDateAdapter } from './native-date-adapter';\nimport { NT_NATIVE_DATE_FORMATS } from './native-date-formats';\n\n@NgModule({\n  imports: [PlatformModule],\n  providers: [\n    { provide: DateAdapter, useClass: NativeDateAdapter },\n    NT_DATE_LOCALE_PROVIDER\n  ],\n})\nexport class NativeDateModule { }\n\n@NgModule({\n  imports: [NativeDateModule],\n  providers: [\n    { provide: NT_DATE_FORMATS, useValue: NT_NATIVE_DATE_FORMATS }\n  ],\n})\nexport class NtNativeDateModule { }\n","\nimport {\n  AfterViewChecked, Component, ChangeDetectorRef, ElementRef, EventEmitter, Input,\n  Inject, InjectionToken, Output, Optional, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { Subject } from 'rxjs/Subject';\n\nexport interface NtOptionParentComponent {\n  disabled?: boolean;\n  multiple?: boolean;\n}\n\nexport class NtOptionSelectionChange {\n  constructor(\n    public source: NtOptionComponent,\n    public isUserInput = false) { }\n}\n\nexport const NT_OPTION_PARENT_COMPONENT = new InjectionToken<NtOptionParentComponent>('nt-option-parent-component');\n\n@Component({\n  selector: 'nt-option',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'class': 'nt-option',\n    '[class.selected]': 'selected',\n    '[class.disabled]': 'disabled',\n    '(click)': 'selectViaInteraction()'\n  }\n})\nexport class NtOptionComponent implements AfterViewChecked {\n\n  private _value: any;\n  private _selected = false;\n  private _disabled = false;\n  private _mostRecentViewValue = '';\n\n  get label() { return (this._element.nativeElement.textContent || '').trim(); }\n\n  get multiple() { return this._parent && this._parent.multiple; }\n\n  @Input()\n  set value(value: any) { this._value = value; }\n  get value() { return this._value; }\n\n  @Input()\n  set disabled(value: boolean) { this._disabled = coerceBooleanProperty(value); }\n  get disabled() { return this._disabled; }\n\n  get selected() { return this._selected; }\n\n  readonly stateChanges = new Subject<void>();\n\n  @Output() readonly selectionChange = new EventEmitter<NtOptionSelectionChange>();\n\n  constructor(\n    private _element: ElementRef,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Inject(NT_OPTION_PARENT_COMPONENT) private _parent: NtOptionParentComponent) { }\n\n  ngAfterViewChecked() {\n    if (this._selected) {\n      const viewValue = this.label;\n      if (viewValue !== this._mostRecentViewValue) {\n        this._mostRecentViewValue = viewValue;\n        this.stateChanges.next();\n      }\n    }\n  }\n\n  focus() {\n    const element = this._element.nativeElement;\n    if (typeof element.focus === 'function') {\n      element.focus();\n    }\n  }\n\n  select() {\n    this._selected = true;\n    this._changeDetectorRef.markForCheck();\n    this._emitSelectionChangeEvent();\n  }\n\n  deselect() {\n    this._selected = false;\n    this._changeDetectorRef.markForCheck();\n    this._emitSelectionChangeEvent();\n  }\n\n  selectViaInteraction() {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n\n  getOffsetY() {\n    return this._element.nativeElement.offsetTop;\n  }\n\n  private _emitSelectionChangeEvent(isUserInput = false): void {\n    this.selectionChange.emit(new NtOptionSelectionChange(this, isUserInput));\n  }\n}\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NtOptionComponent } from './option.component';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [NtOptionComponent],\n  declarations: [NtOptionComponent]\n})\nexport class NtOptionModule { }\n","import { ConnectionPositionPair, HorizontalConnectionPos, VerticalConnectionPos } from '@angular/cdk/overlay';\n\nexport declare type NtOverlayPosition =\n  'bottom' | 'bottomLeft' | 'bottomRight' | 'top' | 'topLeft' | 'topRight' |\n  'left' | 'leftTop' | 'leftBottom' | 'right' | 'rightTop' | 'rightBottom';\n\n\nexport enum NtOverlayOrientation {\n  Vertical = 'vertical',\n  Horizontal = 'horizontal'\n}\n\nexport const OVERLAY_POSITIONS = {\n\n  bottom: [\n    getConnectionPositionPair('center', 'bottom', 'center', 'top'),\n    getConnectionPositionPair('center', 'top', 'center', 'bottom')\n  ],\n  bottomLeft: [\n    getConnectionPositionPair('start', 'bottom', 'start', 'top'),\n    getConnectionPositionPair('start', 'top', 'start', 'bottom')\n  ],\n  bottomRight: [\n    getConnectionPositionPair('end', 'bottom', 'end', 'top'),\n    getConnectionPositionPair('end', 'top', 'end', 'bottom')\n  ],\n\n  top: [\n    getConnectionPositionPair('center', 'top', 'center', 'bottom'),\n    getConnectionPositionPair('center', 'bottom', 'center', 'top')\n  ],\n  topLeft: [\n    getConnectionPositionPair('start', 'top', 'start', 'bottom'),\n    getConnectionPositionPair('start', 'bottom', 'start', 'top')\n  ],\n  topRight: [\n    getConnectionPositionPair('end', 'top', 'end', 'bottom'),\n    getConnectionPositionPair('end', 'bottom', 'end', 'top')\n  ],\n\n  left: [\n    getConnectionPositionPair('start', 'center', 'end', 'center'),\n    getConnectionPositionPair('end', 'center', 'start', 'center')\n  ],\n  leftTop: [\n    getConnectionPositionPair('start', 'top', 'end', 'top'),\n    getConnectionPositionPair('end', 'top', 'start', 'top')\n  ],\n  leftBottom: [\n    getConnectionPositionPair('start', 'bottom', 'end', 'bottom'),\n    getConnectionPositionPair('end', 'bottom', 'start', 'bottom')\n  ],\n\n  right: [\n    getConnectionPositionPair('end', 'center', 'start', 'center'),\n    getConnectionPositionPair('start', 'center', 'end', 'center')\n  ],\n  rightTop: [\n    getConnectionPositionPair('end', 'top', 'start', 'top'),\n    getConnectionPositionPair('start', 'top', 'end', 'top')\n  ],\n  rightBottom: [\n    getConnectionPositionPair('end', 'bottom', 'start', 'bottom'),\n    getConnectionPositionPair('start', 'bottom', 'end', 'bottom')\n  ]\n};\n\n\n/**\n * 定义并返回一个 \boverlay 窗体定位\n * @param originX 主体的中心x轴，窗体会相对于主体的中心点定位。\n * @param originY 主体的中心y轴，窗体会相对于主体的中心点定位。\n * @param overlayX 窗体的中心x轴。\n * @param overlayY 窗体的中心y轴。\n */\nexport function getConnectionPositionPair(\n  originX: HorizontalConnectionPos, originY: VerticalConnectionPos,\n  overlayX: HorizontalConnectionPos, overlayY: VerticalConnectionPos) {\n  return { originX, originY, overlayX, overlayY } as ConnectionPositionPair;\n}\n\n/**\n * 获取定位名称拼接字符串\n * @param pair 定位类型。\n */\nexport function getPositionClassName(pair: ConnectionPositionPair) {\n  return `${pair.originX}-${pair.originY}-${pair.overlayX}-${pair.overlayY}`;\n}\n\nexport function getPositionOrientation(position: string): NtOverlayOrientation {\n  return Object.keys(OVERLAY_POSITIONS).indexOf(position) > 5\n    ? NtOverlayOrientation.Horizontal\n    : NtOverlayOrientation.Vertical;\n}\n","\nimport { Component, OnInit, Output, Input, EventEmitter, ElementRef, Renderer2, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { CdkConnectedOverlay, ConnectedOverlayPositionChange, Overlay, ConnectionPositionPair, OverlayOrigin } from '@angular/cdk/overlay';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { OVERLAY_POSITIONS, NtOverlayPosition, getPositionClassName } from './overlay-positions';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/filter';\n\nimport { trigger, transition, AnimationEvent } from '@angular/animations';\nimport { fadeIn, fadeOut } from '@ng-tangram/animate/fading';\n\nexport declare type NtOverlayTriggerType = '' | 'hover' | 'click';\n\n@Component({\n  selector: 'nt-overlay, [nt-overlay]',\n  template: \"<ng-template cdk-connected-overlay [cdkConnectedOverlayOpen]=\\\"isOpen\\\" [cdkConnectedOverlayHasBackdrop]=\\\"trigger === 'click'\\\" [cdkConnectedOverlayPositions]=\\\"positions\\\" [cdkConnectedOverlayOrigin]=\\\"origin\\\" (positionChange)=\\\"onOverlayPositionChange($event)\\\" (backdropClick)=\\\"hide()\\\"> <div class=\\\"nt-overlay-container {{paddingClass}} {{overlayClass}}\\\" (mouseenter)=\\\"onMouseEnter()\\\" (mouseleave)=\\\"onMouseLeave()\\\" [class.no-spacing]=\\\"noSpacing\\\" [@fade]> <div class=\\\"nt-overlay-shadow\\\"></div> <div class=\\\"nt-overlay-arrow\\\" *ngIf=\\\"arrow\\\"></div> <div class=\\\"nt-overlay-pane\\\"> <ng-content></ng-content> </div> </div> </ng-template> \",\n  animations: [\n    trigger('fade', [\n      transition('void => *', fadeIn(.15)),\n      transition('* => void', fadeOut(.15))\n    ])\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NtOverlayComponent {\n\n  private _isOpen = false;\n  private _isMouseIn = false;\n\n  private _origin: OverlayOrigin;\n  private _position: NtOverlayPosition = 'bottomLeft';\n  private _positionPairs = OVERLAY_POSITIONS[this._position];\n  private _paddingClass = getPositionClassName(this._positionPairs[0]);\n  private _arrow = false;\n  private _noSpacing = false;\n  private _trigger: NtOverlayTriggerType = '';\n  private _overlayClass = '';\n  private _fixed = false;\n\n  private _closeEvent = new EventEmitter<any>();\n  private _positionChange = new EventEmitter<string>();\n\n  get isOpen() { return this._isOpen; }\n  get isMouseIn() { return this._isMouseIn; }\n\n  @Input()\n  set origin(value: OverlayOrigin) { this._origin = value; }\n  get origin() { return this._origin; }\n\n  @Input()\n  set position(value: NtOverlayPosition) { this._position = value; this._setPosition(); }\n  get positions() { return this._positionPairs; }\n\n  get paddingClass() { return this._paddingClass; }\n\n  @Input()\n  set fixed(value: boolean) { this._fixed = coerceBooleanProperty(value); this._setPosition(); }\n  get fixed() { return this._fixed; }\n\n  @Input()\n  set arrow(value: boolean) { this._arrow = coerceBooleanProperty(value); }\n  get arrow() { return this._arrow; }\n\n  @Input()\n  set noSpacing(value: boolean) { this._noSpacing = coerceBooleanProperty(value); }\n  get noSpacing() { return this._noSpacing; }\n\n  @Input()\n  set trigger(value: NtOverlayTriggerType) { this._trigger = value; }\n  get trigger() { return this._trigger; }\n\n  @Input()\n  set overlayClass(value: string) { this._overlayClass = value; }\n  get overlayClass() { return this._overlayClass; }\n\n  @ViewChild(CdkConnectedOverlay) cdkConnectedOverlay: CdkConnectedOverlay;\n\n  @Output() opened = new EventEmitter<any>();\n  @Output() closed = new EventEmitter<any>();\n  @Output() positionChange = new EventEmitter<ConnectedOverlayPositionChange>();\n\n  constructor(\n    private _renderer: Renderer2,\n    private _elementRef: ElementRef) {\n\n    this._closeEvent\n      .debounceTime(100)\n      .filter(_ => this._isMouseIn === false)\n      .subscribe(_ => this.hide());\n\n    this._positionChange\n      .filter(position => position !== this._paddingClass)\n      .subscribe((position: any) => {\n\n        const pane = this.cdkConnectedOverlay.overlayRef.overlayElement.querySelector('.nt-overlay-container');\n        this._paddingClass && this._renderer.removeClass(pane, this._paddingClass);\n        this._paddingClass = position;\n        this._renderer.addClass(pane, this._paddingClass);\n      });\n  }\n\n  private _setPosition() {\n    this._positionPairs = this.fixed ?\n      OVERLAY_POSITIONS[this._position].slice(0, 1) :\n      OVERLAY_POSITIONS[this._position];\n\n    this._paddingClass = getPositionClassName(this._positionPairs[0]);\n  }\n\n  private getPosition(value: NtOverlayPosition) {\n    return this.fixed ? OVERLAY_POSITIONS[value].slice(0, 1) : OVERLAY_POSITIONS[value];\n  }\n\n  show() {\n    this._isOpen = true;\n    this.opened.next();\n  }\n\n  hide() {\n    this._isOpen = false;\n    this.closed.next();\n  }\n\n  click() {\n    if (this.trigger === 'click') {\n      this.isOpen ? this.hide() : this.show();\n    }\n  }\n\n  onOverlayPositionChange(event: ConnectedOverlayPositionChange) {\n    this._positionChange.next(getPositionClassName(event.connectionPair));\n  }\n\n  onMouseEnter() {\n    if (this.trigger === 'hover') {\n      this._isMouseIn = true;\n      this.show();\n    }\n  }\n\n  onMouseLeave() {\n    if (this.trigger === 'hover') {\n      this._closeEvent.next(this._isMouseIn = false);\n    }\n  }\n}\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\n\nimport { NtOverlayComponent } from './overlay.component';\n\n@NgModule({\n  imports: [CommonModule, OverlayModule],\n  exports: [NtOverlayComponent],\n  declarations: [NtOverlayComponent],\n})\nexport class NtOverlayModule { }\n"],"names":[],"mappings":"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"}