{"version":3,"file":"progress.umd.min.js","sources":["../../../../out-tsc/@ng-tangram/components/progress/progress.component.ts","../../../../out-tsc/@ng-tangram/components/progress/progress.module.ts"],"sourcesContent":["\nimport { Component, Input } from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\n\nexport declare type NtProgressSize = 'tiny' | 'small' | 'medium' | 'large';\n\nexport declare type NtProgressColor = '' | 'primary' | 'medium' | 'large';\n\n@Component({\n  selector: 'nt-progress',\n  template: `\n    <span class=\"progress-meter\" [style.width.%]=\"percent\">\n      <p class=\"progress-meter-text\"><ng-content></ng-content></p>\n    </span>\n  `,\n  host: {\n    '[class]': '[\"progress\", color, size, class].join(\" \")'\n  }\n})\nexport class NtProgressComponent {\n\n  private _max = 100;\n\n  private _value = 0;\n\n  @Input()\n  set max(value: number) { this._max = coerceNumberProperty(value, 100); }\n  get max() { return this._max; }\n\n  @Input()\n  set value(value: number) { this._value = coerceNumberProperty(value); }\n  get value() { return this._value; }\n\n  @Input() size: NtProgressSize = 'medium';\n\n  @Input() color: NtProgressColor = '';\n\n  @Input() class: string = '';\n\n  get percent() { return this.value / this.max * 100; }\n}\n","\nimport { NgModule } from '@angular/core';\nimport { NtProgressComponent } from './progress.component';\n\n@NgModule({\n  exports: [NtProgressComponent],\n  declarations: [NtProgressComponent]\n})\nexport class NtProgressModule { }\n"],"names":["NtProgressComponent","this","_max","value","coerceNumberProperty","_value","Object","max","Component","selector","template","host","[class]","Input","NgModule","exports","declarations"],"mappings":"uaAqBiB,gBAEE,YAUe,oBAEE,cAET,gCAXrBA,uBACJ,WAAY,OAAOC,KAAKC,mBADhBC,GAAiBF,KAAKC,KAAOE,uBAAqBD,EAAO,4DAI7DH,yBACJ,WAAc,OAAOC,KAAKI,qBADhBF,GAAiBF,KAAKI,OAASD,uBAAqBD,oCAS9DG,sBAAIN,2BAAJ,WAAgB,OAAOC,KAAKE,MAAQF,KAAKM,IAAM,yDA/BhDC,mBACCC,SAAU,cACVC,SAAU,qJAKVC,MACEC,UAAW,qHASZC,uBAIAA,sBAIAA,uBAEAA,uBAEAA,sECjCFC,kBACCC,SAAUf,GACVgB,cAAehB"}