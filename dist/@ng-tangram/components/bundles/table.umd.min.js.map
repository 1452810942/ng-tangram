{"version":3,"file":"table.umd.min.js","sources":["../../../../out-tsc/@ng-tangram/components/table/column.ts","../../../../out-tsc/@ng-tangram/components/table/column.directive.ts","../../../../out-tsc/@ng-tangram/components/table/table.component.ts","../../../../out-tsc/@ng-tangram/components/table/table.module.ts"],"sourcesContent":["import { InjectionToken, EventEmitter } from '@angular/core';\n\nexport class NtColumnSortChange {\n  constructor(public isUserInput = false, public column: string, public sort: string) {}\n}\n\nexport interface NtColumn {\n  sort: '' | 'asc' | 'desc';\n  sortable: boolean;\n  sorting: (isUserInput: boolean) => void;\n  sortChange: EventEmitter<NtColumnSortChange>;\n  visibled: boolean;\n}\n\nexport interface NtColumnTable {\n\n}\n\nexport const NT_COLUMN = new InjectionToken<NtColumn>('nt-column');\n\nexport const NT_COLUMN_TABLE = new InjectionToken<NtColumnTable>('nt-column-table');\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit, Component, ContentChild, Directive, ElementRef, EventEmitter, Inject, Input,\n  Optional, Output, TemplateRef, ViewChild, ViewContainerRef\n} from '@angular/core';\nimport { NT_COLUMN, NT_COLUMN_TABLE, NtColumn, NtColumnSortChange, NtColumnTable } from './column';\n\n@Directive({\n  selector: 'nt-column-header',\n  host: {\n    'class': 'nt-column-header',\n    '[class.nt-column-sortable]': 'column.sortable',\n    '[class.asc]': 'column.sort === \"asc\"',\n    '[class.desc]': 'column.sort === \"desc\"',\n    '(click)': 'column.sorting(true)'\n  }\n})\nexport class NtColumnHeaderDirective {\n  constructor(\n    public elementRef: ElementRef,\n    @Optional() @Inject(NT_COLUMN) public column: NtColumn) { }\n}\n\n@Directive({\n  selector: 'nt-column-cell',\n  host: {\n    'class': 'nt-column-cell'\n  }\n})\nexport class NtColumnCellDirective { }\n\n@Directive({ selector: '[ntColumnCellDef]' })\nexport class NtColumnCellDefDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n\n@Component({\n  selector: 'nt-column',\n  template: `\n    <ng-template>\n      <ng-content select=\"nt-column-header\"></ng-content>\n    </ng-template>\n  `,\n  providers: [\n    { provide: NT_COLUMN, useExisting: NtColumnComponent }\n  ]\n})\nexport class NtColumnComponent implements NtColumn, AfterContentInit {\n\n  private _sortable = false;\n\n  sort: '' | 'asc' | 'desc' = '';\n\n  visibled = true;\n\n  @Input()\n  set sortable(value: boolean) { this._sortable = coerceBooleanProperty(value); }\n  get sortable() { return this._sortable; }\n\n  get text () {\n    return this.header && this.header.elementRef.nativeElement.textContent;\n  }\n\n  @Input() name: string;\n\n  @Input() width: number | string = 'auto';\n\n  @Input() align: 'left' | 'center' | 'right' = 'left';\n\n  @ViewChild(TemplateRef) template: TemplateRef<any>;\n\n  @ContentChild(NtColumnHeaderDirective) header: NtColumnHeaderDirective;\n\n  @ContentChild(NtColumnCellDefDirective) cell: NtColumnCellDefDirective;\n\n  readonly sortChange: EventEmitter<NtColumnSortChange> = new EventEmitter<NtColumnSortChange>();\n\n  constructor(\n    @Optional() @Inject(NT_COLUMN_TABLE) private _table: NtColumnTable,\n    private _viewContainerRef: ViewContainerRef,\n    private _elementRef: ElementRef) { }\n\n  /** 排序操作 */\n  sorting(isUserInput = false) {\n    if (this.sortable) {\n\n      /** 按照 升 -> 降 -> 无 的循环改变排序 */\n      if (this.sort === 'asc') {\n        this.sort = 'desc';\n      } else if (this.sort === 'desc') {\n        this.sort = '';\n      } else {\n        this.sort = 'asc';\n      }\n\n      /** 用户操作的操作才会触发事件 */\n      this.sortChange.emit(new NtColumnSortChange(isUserInput, this.name, this.sort));\n    }\n  }\n\n  ngAfterContentInit() {\n\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n  AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild,\n  ContentChildren, ElementRef, EventEmitter, Input, NgZone, OnChanges, OnDestroy, OnInit, Output,\n  QueryList, SimpleChanges, TemplateRef, ViewChild, ViewChildren, ViewEncapsulation\n} from '@angular/core';\nimport { fadeIn } from '@ng-tangram/animate/fading';\n\nimport { Observable } from 'rxjs/Observable';\nimport { defer } from 'rxjs/observable/defer';\nimport { merge } from 'rxjs/observable/merge';\nimport { filter, startWith, switchMap, take, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs/Subject';\n\nimport { NT_COLUMN_TABLE, NtColumn, NtColumnSortChange, NtColumnTable } from './column';\nimport { NtColumnComponent, NtColumnHeaderDirective } from './column.directive';\n\n@Component({\n  selector: 'nt-table',\n  template: \"<table [class]=\\\"class\\\"> <thead> <tr> <th class=\\\"nt-selector-header\\\" *ngIf=\\\"selectable\\\"> <input type=\\\"checkbox\\\" (click)=\\\"selectAll()\\\" [checked]=\\\"isAllSelected\\\"> </th> <th class=\\\"nt-column-h\\\" *ngFor=\\\"let column of columns\\\" [style.width]=\\\"column.width\\\" [style.textAlign]=\\\"column.align\\\" [class.hidden]=\\\"!column.visibled\\\"> <ng-container *ngTemplateOutlet=\\\"column.template\\\"></ng-container> </th> </tr> </thead> <tbody> <tr *ngFor=\\\"let data of dataSource\\\"> <ng-container *ngTemplateOutlet=\\\"dataRow; context: {$implicit: data};\\\"></ng-container> </tr> </tbody> </table> <ng-template #dataRow let-data> <td class=\\\"nt-selector-cell\\\" *ngIf=\\\"selectable\\\"> <input type=\\\"checkbox\\\" (click)=\\\"select(data)\\\" [checked]=\\\"checkSelected(data)\\\"> </td> <td *ngFor=\\\"let column of columns\\\" [style.textAlign]=\\\"column.align\\\" [class.hidden]=\\\"!column.visibled\\\"> <ng-container *ngTemplateOutlet=\\\"column.cell.template; context: {$implicit: data};\\\"></ng-container> </td> </ng-template> \",\n  encapsulation: ViewEncapsulation.None,\n  // changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: NT_COLUMN_TABLE, useExisting: NtTableComponent }\n  ],\n  host: {\n    'class': 'nt-table'\n  }\n})\nexport class NtTableComponent<T> implements NtColumnTable, AfterContentInit, OnChanges, OnDestroy {\n\n  columnComponent = NtColumnComponent;\n\n  @Input() class: string;\n\n  private _selectionModel: SelectionModel<T> = new SelectionModel(true, undefined, false);\n\n  private _multipleSortable = false;\n\n  private _selectable = false;\n\n  private readonly _destroy = new Subject<void>();\n\n  @ContentChildren(NtColumnComponent)\n  private _columns: QueryList<NtColumnComponent>;\n\n  get columns() { return this._columns ? this._columns.toArray() : []; }\n\n  @Input() dataSource: Array<T>;\n\n  @Input()\n  set selectable(value: boolean) { this._selectable = coerceBooleanProperty(value); }\n  get selectable() { return this._selectable; }\n\n  @Output() readonly selectedChange: EventEmitter<T | T[]> = new EventEmitter();\n\n  @Output() readonly sortChange: EventEmitter<NtColumnSortChange | NtColumnSortChange[]> = new EventEmitter();\n\n  readonly columSortChanges: Observable<NtColumnSortChange> = defer(() => {\n    if (this._columns) {\n      return merge(...this._columns.map(column => column.sortChange));\n    }\n\n    return this._ngZone.onStable\n      .asObservable()\n      .pipe(take(1), switchMap(() => this.columSortChanges));\n  });\n\n  get isAllSelected() { return this._selectionModel.selected.length === this.dataSource.length; }\n\n  get selected() { return this._selectionModel.selected; }\n\n  constructor(\n    private _ngZone: NgZone,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _element: ElementRef) { }\n\n  ngOnChanges(change: SimpleChanges) {\n    if (change && change.dataSource && !change.dataSource.firstChange) {\n      this._selectionModel.clear();\n    }\n  }\n\n  ngAfterContentInit() {\n    this._columns.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n      this._resetOptions();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  selectAll() {\n    if (!this.isAllSelected) {\n      this._selectionModel.select(...this.dataSource);\n    } else {\n      this._selectionModel.clear();\n    }\n    this.selectedChange.emit(this._selectionModel.selected);\n  }\n\n  select(item: T) {\n    const wasSelected = this.checkSelected(item);\n    if (wasSelected) {\n      this._selectionModel.deselect(item);\n    } else {\n      this._selectionModel.select(item);\n    }\n\n    this.selectedChange.emit(this._selectionModel.selected);\n  }\n\n  checkSelected(item: T) {\n    return this._selectionModel.isSelected(item);\n  }\n\n  private _clearSort(filter?: NtColumnSortChange) {\n    this._columns\n      .filter(column => column.name !== (filter ? filter.column : ''))\n      .forEach(column => column.sort = '');\n  }\n\n  private _resetOptions() {\n    const changedOrDestroyed = merge(this._columns.changes, this._destroy);\n\n    this.columSortChanges\n      .pipe(takeUntil(changedOrDestroyed), filter(event => event.isUserInput))\n      .subscribe(event => {\n        if (!this._multipleSortable) {\n          this._clearSort(event);\n        }\n        this.sortChange.emit(event);\n      });\n\n    merge(...this._columns.map(option => option.sortChange))\n      .pipe(takeUntil(changedOrDestroyed))\n      .subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n  }\n\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NtOverlayModule } from '@ng-tangram/components/core';\n\nimport {\n  NtColumnCellDefDirective, NtColumnCellDirective, NtColumnComponent,\n  NtColumnHeaderDirective\n} from './column.directive';\nimport { NtTableComponent } from './table.component';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [\n    CommonModule,\n    NtTableComponent,\n    NtColumnComponent,\n    NtColumnCellDirective,\n    NtColumnHeaderDirective,\n    NtColumnCellDefDirective\n  ],\n  declarations: [\n    NtTableComponent,\n    NtColumnComponent,\n    NtColumnCellDirective,\n    NtColumnHeaderDirective,\n    NtColumnCellDefDirective\n  ]\n})\nexport class NtTableModule { }\n"],"names":["NtColumnSortChange","isUserInput","column","sort","this","NT_COLUMN","InjectionToken","NT_COLUMN_TABLE","elementRef","Directive","selector","host","class","[class.nt-column-sortable]","[class.asc]","[class.desc]","(click)","ElementRef","Optional","Inject","template","TemplateRef","_table","_viewContainerRef","_elementRef","EventEmitter","NtColumnComponent","_sortable","value","coerceBooleanProperty","Object","header","nativeElement","textContent","sortable","sortChange","emit","name","Component","providers","provide","useExisting","ViewContainerRef","Input","ViewChild","ContentChild","NtColumnHeaderDirective","NtColumnCellDefDirective","_ngZone","_changeDetectorRef","_element","SelectionModel","undefined","Subject","defer","_this","_columns","merge","map","onStable","asObservable","pipe","take","switchMap","columSortChanges","NtTableComponent","toArray","_selectable","_selectionModel","selected","length","dataSource","change","firstChange","clear","changes","startWith","takeUntil","_destroy","subscribe","_resetOptions","markForCheck","isAllSelected","_a","select","selectedChange","item","checkSelected","deselect","isSelected","filter","forEach","changedOrDestroyed","event","_multipleSortable","_clearSort","option","next","complete","encapsulation","ViewEncapsulation","None","NgZone","ChangeDetectorRef","ContentChildren","Output","NgModule","imports","CommonModule","exports","NtColumnCellDirective","declarations"],"mappings":"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"}